{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer2/source-files'\r\n// rest of your config stays the same\r\n\r\nimport rehypeSlug from 'rehype-slug'\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport remarkGfm from 'remark-gfm'\r\nimport readingTime from 'reading-time'\r\n\r\nconst computedDate = {\r\n  type: 'date',\r\n  resolve: (doc: any) => new Date(doc.date),\r\n}\r\n\r\nexport const Project = defineDocumentType(() => ({\r\n  name: 'Project',\r\n  filePathPattern: `projects/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    slug: { type: 'string', required: true },\r\n    summary: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    tags: { type: 'list', of: { type: 'string' } },\r\n    stack: { type: 'list', of: { type: 'string' } },\r\n    repoUrl: { type: 'string' },\r\n    liveUrl: { type: 'string' },\r\n    cover: { type: 'string' },\r\n    featured: { type: 'boolean', default: false },\r\n    published: { type: 'boolean', default: true },\r\n  },\r\n  computedFields: {\r\n    url: { type: 'string', resolve: (doc) => `/projects/${doc.slug}` },\r\n    dateObj: computedDate,\r\n    readingTime: {\r\n      type: 'json',\r\n      resolve: (doc) => readingTime(doc.body.raw),\r\n    },\r\n  },\r\n}))\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `blog/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    slug: { type: 'string', required: true },\r\n    summary: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    tags: { type: 'list', of: { type: 'string' } },\r\n    cover: { type: 'string' },\r\n    canonical: { type: 'string' },\r\n    published: { type: 'boolean', default: true },\r\n  },\r\n  computedFields: {\r\n    url: { type: 'string', resolve: (doc) => `/blog/${doc.slug}` },\r\n    dateObj: computedDate,\r\n    readingTime: {\r\n      type: 'json',\r\n      resolve: (doc) => readingTime(doc.body.raw),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Project, Post],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      [rehypeAutolinkHeadings, { behavior: 'wrap' }],\r\n    ],\r\n  },\r\n})\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAG/C,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,eAAe;AACtB,OAAO,iBAAiB;AAExB,IAAM,eAAe;AAAA,EACnB,MAAM;AAAA,EACN,SAAS,CAAC,QAAa,IAAI,KAAK,IAAI,IAAI;AAC1C;AAEO,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC7C,OAAO,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC9C,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,UAAU,EAAE,MAAM,WAAW,SAAS,MAAM;AAAA,IAC5C,WAAW,EAAE,MAAM,WAAW,SAAS,KAAK;AAAA,EAC9C;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,aAAa,IAAI,IAAI,GAAG;AAAA,IACjE,SAAS;AAAA,IACT,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,IAC5C;AAAA,EACF;AACF,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC7C,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,WAAW,EAAE,MAAM,SAAS;AAAA,IAC5B,WAAW,EAAE,MAAM,WAAW,SAAS,KAAK;AAAA,EAC9C;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,SAAS,IAAI,IAAI,GAAG;AAAA,IAC7D,SAAS;AAAA,IACT,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,IAC5C;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,SAAS,IAAI;AAAA,EAC7B,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA,CAAC,wBAAwB,EAAE,UAAU,OAAO,CAAC;AAAA,IAC/C;AAAA,EACF;AACF,CAAC;",
  "names": []
}
